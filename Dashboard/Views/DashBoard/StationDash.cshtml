@{
    Layout = null;
    string sera = "";
    string sera2 = "";
    string sera3 = "";
    string sera4 = "";
    string sera5 = "";
    string sera6 = "";
    string sera7 = "";
    List<string> s = new List<string>();
    int count = 0;
}
@model List<StationModel>
@foreach (var i in Model.Where(x => x.attrName == "humidity").ToList())
{
    count++;
    if (Model.Count() > count)
        sera += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "],";
    else
        sera += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "]";
}
@foreach (var i in Model.Where(x => x.attrName == "ground_humidity").ToList())
{
    count++;
    if (Model.Count() > count)
        sera2 += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "],";
    else
        sera2 += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "]";
}
@foreach (var i in Model.Where(x => x.attrName == "luminosity").ToList())
{
    count++;
    if (Model.Count() > count)
        sera3 += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "],";
    else
        sera3 += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "]";
}
@foreach (var i in Model.Where(x => x.attrName == "pressure").ToList())
{
    count++;
    if (Model.Count() > count)
        sera4 += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "],";
    else
        sera4 += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "]";
}
@foreach (var i in Model.Where(x => x.attrName == "rain_mm").ToList())
{
    count++;
    if (Model.Count() > count)
        sera5 += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "],";
    else
        sera5 += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "]";
}
@foreach (var i in Model.Where(x => x.attrName == "temperature").ToList())
{
    count++;
    if (Model.Count() > count)
        sera6 += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "],";
    else
        sera6 += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "]";
}
@foreach (var i in Model.Where(x => x.attrName == "wind_speed").ToList())
{
    count++;
    if (Model.Count() > count)
        sera7 += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "],";
    else
        sera7 += $"[[ parseInt({i.recvTime.Hour}), parseInt({i.recvTime.Minute})]," + i.attrValue + "]";
}
<head>
    <script type="text/javascript" src="https://www.gstatic.com/charts/loader.js"></script>
    <script type="text/javascript">
        google.charts.load('current', { 'packages': ['line'] });
        google.charts.setOnLoadCallback(drawChart);
        google.charts.setOnLoadCallback(drawChart2);
        google.charts.setOnLoadCallback(drawChart3);
        google.charts.setOnLoadCallback(drawChart4);
        google.charts.setOnLoadCallback(drawChart5);
        google.charts.setOnLoadCallback(drawChart6);
        google.charts.setOnLoadCallback(drawChart7);

        function drawChart() {

            var data = new google.visualization.DataTable();
            data.addColumn('timeofday', 'Dia 13/05/2021');
            data.addColumn('number', 'Estação 7');

            data.addRows([
                @sera
            ]);

            var options = {
                chart: {
                    title: 'Umidade',
                    subtitle: 'Dia 13/05/2021'
                },
                width: 500,
                height: 250,
                hAxis: {
                    minValue: 0,
                    format: 'h:mm a',
                    title: 'Tempo (HH:mm)'
                },
                vAxis: {
                    minValue: 0,
                    maxValue: 100,
                    title: 'Umidade (%)'

                }
            };
            var chart = new google.charts.Line(document.getElementById('line_top_x'));

            chart.draw(data, google.charts.Line.convertOptions(options));
        }

        function drawChart2() {

            var data = new google.visualization.DataTable();
            data.addColumn('timeofday', 'Dia 13/05/2021');
            data.addColumn('number', 'Estação 7');

            data.addRows([
                @sera2
            ]);

            var options = {
                chart: {
                    title: 'Umidade do solo',
                    subtitle: 'Dia 13/05/2021'
                },
                width: 500,
                height: 250,
                hAxis: {
                    minValue: 0,
                    format: 'h:mm a',
                    title: 'Tempo (HH:mm)'
                },
                vAxis: {
                    minValue: 0,
                    maxValue: 100,
                    title: 'Umidade (%)'
                }
            };
            var chart = new google.charts.Line(document.getElementById('line_top_x2'));

            chart.draw(data, google.charts.Line.convertOptions(options));
        }

        function drawChart3() {

            var data = new google.visualization.DataTable();
            data.addColumn('timeofday', 'Dia 13/05/2021');
            data.addColumn('number', 'Estação 7');

            data.addRows([
                @sera3
            ]);

            var options = {
                chart: {
                    title: 'Luminosidade',
                    subtitle: 'Dia 13/05/2021'
                },
                width: 500,
                height: 250,
                hAxis: {
                    minValue: 0,
                    format: 'h:mm a',
                    title: 'Tempo (HH:mm)'
                },
                vAxis: {
                    minValue: 0,
                    maxValue: 100

                }
            };
            var chart = new google.charts.Line(document.getElementById('line_top_x3'));

            chart.draw(data, google.charts.Line.convertOptions(options));
        }

        function drawChart4() {

            var data = new google.visualization.DataTable();
            data.addColumn('timeofday', 'Dia 13/05/2021');
            data.addColumn('number', 'Estação 7');

            data.addRows([
                @sera4
            ]);

            var options = {
                chart: {
                    title: 'Pressão',
                    subtitle: 'Dia 13/05/2021'
                },
                width: 500,
                height: 250,
                hAxis: {
                    minValue: 0,
                    format: 'h:mm a',
                    title: 'Tempo (HH:mm)'
                },
                vAxis: {
                    minValue: 0,
                    maxValue: 100,
                    title: 'Pressão atmosférica (hPa)'
                }
            };
            var chart = new google.charts.Line(document.getElementById('line_top_x4'));

            chart.draw(data, google.charts.Line.convertOptions(options));
        }

        function drawChart5() {

            var data = new google.visualization.DataTable();
            data.addColumn('timeofday', 'Dia 13/05/2021');
            data.addColumn('number', 'Estação 7');

            data.addRows([
                @sera5
            ]);

            var options = {
                chart: {
                    title: 'Chuva mm',
                    subtitle: 'Dia 13/05/2021'
                },
                width: 500,
                height: 250,
                hAxis: {
                    minValue: 0,
                    format: 'h:mm a',
                    title: 'Tempo (HH:mm)'
                },
                vAxis: {
                    minValue: 0,
                    maxValue: 100,
                    title: 'Volumetria (mm)'
                }
            };
            var chart = new google.charts.Line(document.getElementById('line_top_x5'));

            chart.draw(data, google.charts.Line.convertOptions(options));
        }

        function drawChart6() {

            var data = new google.visualization.DataTable();
            data.addColumn('timeofday', 'Dia 13/05/2021');
            data.addColumn('number', 'Estação 7');

            data.addRows([
                @sera6
            ]);

            var options = {
                chart: {
                    title: 'Temperatura',
                    subtitle: 'Dia 13/05/2021'
                },
                width: 500,
                height: 250,
                hAxis: {
                    minValue: 0,
                    format: 'h:mm a',
                    title: 'Tempo (HH:mm)'
                },
                vAxis: {
                    minValue: 0,
                    maxValue: 100,
                    title: 'Grau Celsius (°C)'
                }
            };
            var chart = new google.charts.Line(document.getElementById('line_top_x6'));

            chart.draw(data, google.charts.Line.convertOptions(options));
        }

        function drawChart7() {

            var data = new google.visualization.DataTable();
            data.addColumn('timeofday', 'Dia 13/05/2021');
            data.addColumn('number', 'Estação 7');

            data.addRows([
                @sera7
            ]);

            var options = {
                chart: {
                    title: 'Velocidade do vento',
                    subtitle: 'Dia 13/05/2021'
                },
                width: 500,
                height: 250,
                hAxis: {
                    minValue: 0,
                    format: 'h:mm a',
                    title: 'Tempo (HH:mm)'
                },
                vAxis: {
                    minValue: 0,
                    maxValue: 100,
                    title: 'Velocidade média(m/s)'
                }
            };
            var chart = new google.charts.Line(document.getElementById('line_top_x7'));

            chart.draw(data, google.charts.Line.convertOptions(options));
        }
    </script>
    <style>
        .container-centralizado{
            display: flex;
            flex-direction: column;
            align-items: center;
            justify-content: center;
        }

        
        .lado-a-lado{
           display: flex;
        }

        .container-graph{
            margin-right: 10px;
            padding:20px;
        }

        .container-graph-style{
            box-shadow: 0 4px 8px 0 rgba(0,0,0,0.2);
            transition: 0.3s;
        }
    </style>
</head>
<div class="container-centralizado">
    <div class="lado-a-lado">
        <div class="container-graph container-graph-style form-group">
            <div id="line_top_x"></div>
        </div>
        <div class="container-graph container-graph-style form-group">
            <div id="line_top_x2"></div>
        </div>
        <div class="container-graph container-graph-style form-group">
            <div id="line_top_x6"></div>
        </div>
    </div>
    <div class="lado-a-lado">
        <div class="container-graph container-graph-style form-group">
            <div id="line_top_x4"></div>
        </div>
        <div class="container-graph container-graph-style form-group">
            <div id="line_top_x5"></div>
        </div>
        <div class="container-graph container-graph-style form-group">
            <div id="line_top_x3"></div>
        </div>
    </div>
</div>

<div class="container-centralizado">
    <div class="container-graph container-graph-style form-group">
        <div id="line_top_x7"></div>
    </div>    
</div>

@*<body>
                <div id="line_top_x"></div>
            </body>
            </html>
            <!DOCTYPE html>

            <html>
            <head>
                <meta name="viewport" content="width=device-width" />
                <sc
        <div id="line_top_x"></div
    <div id="line_top_x"></divript type="text/javascript" src="https://canvasjs.com/assets/script/canvasjs.min.js"></script>
                <title>Line Chart</title>
            </head>
            <body>
                <div id="chartContainer"></div>

                <script type="text/javascript">
                    window.onload = function () {
                        var chart = new CanvasJS.Chart("chartContainer", {
                            theme: "light2",
                            zoomEnabled: true,
                            animationEnabled: true,
                            title: {
                                text: "Line Chart in ASP.Net MVC using CanvasJS"
                            },
                            subtitles: [
                                {
                                    text: "Try Resizing the Browser"
                                }
                            ],
                            data: [
                                {
                                    type: "line",
                                    dataPoints: [
                                       @sera
                                    ],
                                }
                            ]
                        });
                        chart.render();
                    };
                </script>

            </body>
            </html>*@